pipeline {
    agent { label 'jenkins_slave' }

    tools {
        maven 'Maven'
    }

    stages {
        stage('Git Checkout (Built-In-Node)') {
            steps {
                git branch: 'main', url: 'https://github.com/s009desh/healtcare.git'
            }
        }

        stage('Maven Clean and Package') {
            steps {
                sh 'mvn clean package'
            }
        }

        stage('Publish HTML Report') {
            steps {
                publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: false, reportDir: '/home/devopsadmin/workspace/Healthcare-project/target/surefire-reports', reportFiles: 'index.html', reportName: 'HTML Report', reportTitles: '', useWrapperFileDirectly: true])
            }
        }

        stage('Docker Build Image') {
            steps {
                script {
                    sh 'docker build -t s009/healthcare:1.0 .'
                }
            }
        }

        stage('Docker Login and Push to Repo') {
            steps {
                script {
                    withCredentials([string(credentialsId: 'dockerhub', variable: 'dockerpass')]) {
                        sh 'docker login -u s009 -p ${dockerpass}'
                        sh "docker push s009/healthcare:1.0"
                    }
                }
            }
        }
        
        stage('Ansible Deployment to Test on QAserver') {
            steps {
                script {
                    ansiblePlaybook credentialsId: 'devopsadmin', installation: 'Ansible', inventory: '/etc/ansible/hosts', playbook: 'ansible-playbook.yml', vaultTmpPath: ''
                }
            }
        }
        
        stage('Sending the artifact over Kubernetes master ') {
            steps {
                script {
                    sshPublisher(publishers: [sshPublisherDesc(configName: 'kubernetes', transfers: [sshTransfer(cleanRemote: false, excludes: '', execCommand: 'kubectl apply -f healtcare.yml', execTimeout: 120000, flatten: false, makeEmptyDirs: false, noDefaultExcludes: false, patternSeparator: '[, ]+', remoteDirectory: '.', remoteDirectorySDF: false, removePrefix: '', sourceFiles: '*.yml')], usePromotionTimestamp: false, useWorkspaceInPromotion: false, verbose: false)])
                }
            }
        }
    }
}
